@host = http://localhost:5000
@admin_email = Admin@stubmail.com
@admin_password = AdminPassword@5000
@email = test_user@stubmail.com
@password = test_userPassword@5000


### Authentication Request
POST {{host}}/api/auth
Content-Type: application/json
Accept: application/json

{
    "email": "{{admin_email}}",
    "password": "{{admin_password}}"
}

> {%
    client.global.set("admin_auth_token", response.body.token);
%}

### Create User Request

< {%
    // ["Inactive", "Suspended"] -> Those ones might change the happy path due validations over emit JWT token
    const statuses = ["Active"];
    const roles = ["Customer", "Admin", "Manager"];
    request.variables.set("status", statuses[Math.floor(Math.random() * statuses.length)])
    request.variables.set("role", roles[Math.floor(Math.random() * roles.length)])
%}

POST {{host}}/api/users
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{admin_auth_token}}

{
    "email": "{{email}}",
    "username": "{{$random.name.username}}",
    "password": "{{password}}",
    "name": {
        "firstname": "{{$random.address.firstName}}",
        "lastname": "{{$random.name.lastName}}"
    },
    "address": {
        "city": "{{$random.address.city}}",
        "street": "{{$random.address.streetName}}",
        "number": {{$random.address.streetAddressNumber}},
        "zipcode": "{{$random.address.zipCode}}",
        "geolocation": {
            "lat": "{{$random.address.latitude}}",
            "long": "{{$random.address.longitude}}"
        }
    },
    "phone": "+559198{{$random.address.streetAddressNumber}}45",
    "status": "{{status}}",
    "role": "{{role}}"
}

> {%
    client.global.set("user_location", response.headers.valueOf("Location"));
%}


### Get User by ID via location header
GET {{user_location}}
Content-Type: application/json
Accept: application/json

> {%
    client.global.set("user_id", response.body.id);
%}


### Authentication Request
POST {{host}}/api/auth
Content-Type: application/json
Accept: application/json

{
    "email": "{{email}}",
    "password": "{{password}}"
}

> {%
    client.global.set("auth_token", response.body.token);
%}

#### Create Product 1
POST {{host}}/api/products
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{auth_token}}

{
    "description": "{{$random.superhero.descriptor}}",
    "price": 19.99,
    "stock": 100,
    "title": "{{$random.book.title}}",
    "image": "{{$random.internet.image}}",
    "category": "Action",
    "rating":{
        "count": 0,
        "rate": 1.5
    }
}

> {%
    if (response.status == 201) {
        client.global.set("firstProductId", response.body.id);
    }
%}

#### Create Product 2
POST {{host}}/api/products
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{auth_token}}

{
    "description": "{{$random.superhero.descriptor}}",
    "price": 19.99,
    "stock": 100,
    "title": "{{$random.book.title}}",
    "image": "{{$random.internet.image}}",
    "category": "Action",
    "rating":{
        "count": 0,
        "rate": 1.5
    }
}

> {%
    if (response.status == 201) {
        client.global.set("secondProductId", response.body.id);
    }
%}

#### Create Product 3
POST {{host}}/api/products
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{auth_token}}

{
    "description": "{{$random.superhero.descriptor}}",
    "price": 31.0,
    "stock": 20,
    "title": "{{$random.book.title}}",
    "image": "{{$random.internet.image}}",
    "category": "Action",
    "rating":{
        "count": 10,
        "rate": 2.8
    }
}

> {%
    if (response.status == 201) {
        client.global.set("thirdProductId", response.body.id);
    }
%}

#### Create Cart With Created Products
< {%
    const now = new Date();
    const formattedDate = now.toISOString();
    client.global.set("current_date", formattedDate);
 %}

PUT {{host}}/api/carts
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{auth_token}}

{
  "userId": "{{user_id}}",
  "date": "{{current_date}}",
  "products": [
      {
          "productId": "{{firstProductId}}",
          "quantity": 15
      },
      {
          "productId": "{{secondProductId}}",
          "quantity": 1
      },
      {
          "productId": "{{thirdProductId}}",
          "quantity": 5
      }
  ]
}

> {%
    client.global.set("cartId", response.body.id);
%}

#### Get User Cart
GET {{host}}/api/carts/{{user_id}}
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{auth_token}}


### Create Sale for products in the cart
POST {{host}}/api/sales
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{auth_token}}

{
  "cartId": "{{cartId}}",
  "userId": "{{user_id}}",
  "branch": "{{$random.company.name}}"
}

#### Delete User by ID
DELETE {{host}}/api/Users/{{user_id}}
Authorization: Bearer {{auth_token}}
